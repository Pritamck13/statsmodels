[build-system]
build-backend = 'mesonpy'
# These are strictly build requirements. Runtime requirements are listed in
# INSTALL_REQUIRES in setup.py
requires = [
    'meson-python',
    "cython>=3.0.13,<4",  # Sync with CYTHON_MIN_VER in setup
    "numpy>=2.0.0,<3",
    "scipy>=1.13,<2",
    "setuptools_scm>=9.2.0,<10",
]

[project]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Programming Language :: Cython",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering",
]
description = "Statistical computations and models for Python"
dynamic = ["version"]
keywords = [
    "statistics",
    "econometrics",
    "time series",
    "regression",
    "anova",
    "statistical tests",
    "linear models",
    "generalized linear models",
    "discrete choice models",
    "robust linear models",
    "mixed linear models",
    "time series analysis",
    "state space models",
    "vector autoregression",
    "volatility modeling",
    "unit root tests",
    "cointegration tests",
    "nonparametric methods",
    "multivariate statistics"
]
license = "BSD-3-Clause"
license-files = [ "LICENSE.txt" ]
maintainers = [
    { name = "statsmodels Developers", email = "pystatsmodels@googlegroups.com" },
]
name = "statsmodels"
dependencies = [
    "numpy>=1.22.3,<3",  # released March 2022
    "scipy>=1.8,!=1.9.2",  # released Feb 2022, 1.9.2 blocked due to bug
    "pandas>=1.4,!=2.1.0",  # released Feb 2022, 2.1.0 blocked due to bug
    "patsy>=0.5.6",  # released December 2023
    "packaging>=21.3",  # released Nov 2021
    "formulaic>=1.1.0",  # released December 2024
]
readme = "README.rst"
requires-python = ">=3.9"

[project.optional-dependencies]
test = [
    # test
    "pytest>=8.4.1,<9",
    "pytest-randomly",
    "pytest-xdist",
    "pytest-cov",
    "meson",
    'ninja; sys_platform != "emscripten"',
]
doc = [
    # Requirements for doc build, in addition to requirements.txt
    "sphinx",
    # Avoid warnings which break Sphinx by pinning pandas
    "pandas>=2.2.2,!=2.1.0",
    "sphinx-immaterial",
    "jupyter",
    "notebook",
    "nbsphinx",
    "nbconvert",
    "pyyaml",
    "pandas-datareader",
    "simplegeneric",
    "seaborn",
    "numpydoc",
    "theano-pymc; os_name != 'nt'",
    "pymc3; os_name != 'nt'",
    "arviz; os_name != 'nt'",
    "jinja2==3.0.3",
    "pickleshare",
    "pytest>=8.4.1,<9",
]
dev = [
    # build
    "cython>=3.0.10,<4",
    "setuptools_scm~=9.0",
    "meson-python>=0.18.0",
    "meson",
    "ninja",
    # run
    "matplotlib>=3",
    "colorama",
    "joblib",
    # Remove due to failures on azure CI
    # cvxopt; os_name != "win32"
    # Pin on Win32
    "pywinpty; os_name == 'nt'",
    # code quality
    "flake8",
    "isort",
    "ruff",
]

[project.urls]
homepage = "https://www.statsmodels.org"
documentation = "https://www.statsmodels.org/stable/index.html"
repository = "https://github.com/statsmodels/statsmodels"
changelog = "https://bashtage.github.io/arch/changes.html"
bugtracker = "https://github.com/statsmodels/statsmodels/issues"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.ruff]
line-length = 88
target-version = "py310"
fix = true
typing-modules = ["statsmodels.compat.python", "compat.python"]

[tool.ruff.lint]
typing-modules = ["statsmodels.compat.python", "compat.python"]

[tool.pytest.ini_options]
minversion = "8.4.1"
addopts = "--strict --durations=30 --junitxml=test-data.xml"
testpaths = "statsmodels"
empty_parameter_set_mark = "fail_at_collect"
filterwarnings = [
    "ignore:`formatargspec`:DeprecationWarning:statsmodels",
    "ignore:Using or importing:DeprecationWarning",
    "ignore:Session._key_changed is deprecated:DeprecationWarning",
    "error:Support for multi-dimensional:DeprecationWarning",
    "error:Mutating unit root tests is deprecated:FutureWarning",
    "error:invalid value encountered in cos:RuntimeWarning",
    "error:divide by zero encountered in double_scalars:RuntimeWarning",
    "error:Lag selection has changed:DeprecationWarning",
    "error:More than 20 figures have been opened:RuntimeWarning:",
    "error:Inequality constraints incompatible::",
    "error:Parameters are not consistent with a::",
    "ignore:The --strict option is deprecated:pytest.PytestDeprecationWarning",
    "error:The default for reindex:FutureWarning:",
    "error:overflow encountered in square:RuntimeWarning",
    "error:Values in x were outside bounds:RuntimeWarning:",
    "error:The random_state property is deprecated:FutureWarning",
    "error:random_state is deprecated:FutureWarning",
    "error:seed is deprecated:FutureWarning",
    "error:get_state is deprecated:FutureWarning",
    "error:Conversion of an array with ndim:DeprecationWarning:arch"
    # Strict checks disabled
    # "error:invalid value encountered in log:RuntimeWarning",
    # "error:invalid value encountered in sqrt:RuntimeWarning:",
    # "error:overflow encountered in double_scalars:RuntimeWarning:",
    # "error:overflow encountered in multiply:RuntimeWarning:",
]
junit_family = "xunit2"
markers = [
    "example: mark a test that runs example code",
    "matplotlib: mark a test that requires matplotlib",
    "slow: mark a test as slow",
    "smoke: mark a test as a smoketest",
    "low_precision: mark a test as low precision",
    "todo: mark a test as incomplete"
]

[tool.isort]
profile = "black"
src_paths = ["statsmodels"]
sections = ["FUTURE","COMPAT","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
known_first_party = ["statsmodels"]
known_compat = ["statsmodels.compat.*","setuptools,setuptools.*"]
known_third_party=["Cython","numpy","matplotlib","pandas","patsy","pytest","cvxopt","cython"]
line_length=88
force_grid_wrap=0
multi_line_output=3
combine_as_imports=true
force_sort_within_sections=true
include_trailing_comma=true
use_parentheses=true

